% Y = load_tiffstack("E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_12\16_55_19_RET8\HPC_miniscope1\msCam_MC_cawaves.tiff");
% mc_name = "E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_12\16_55_19_RET8\HPC_miniscope1\msCam_MC.tiff";
clear
%%%%%%%% first retrieval 8
dirrr = {'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_12\16_55_19_RET8\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_13\16_28_05_HC9\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_13\17_35_20_RET10\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_13\17_51_12_CON11\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_15\14_26_24_HC15\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_15\15_16_02_CON16\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_15\16_28_51_HC17\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23454\2023_08_16\12_19_41_CON18\HPC_miniscope1\',...%%%%
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_12\17_39_31_RET8\HPC_miniscope1\',...%%%%
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_13\16_57_02_HC9\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_13\18_35_09_RET10\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_13\18_46_02_CON11\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_15\14_48_54_HC15\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_15\15_49_46_CON16\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_15\16_58_04_HC17\HPC_miniscope1\',...
    'E:\RecordingData\GarrettBlair\PKCZ_imaging\mHPC23459\2023_08_16\12_46_12_CON18\HPC_miniscope1\'};

ndir = length(dirrr);
roi_perc = NaN(ndir,1);
%%
videoPlotting = false;

for dirLoop = 1:ndir
    dirrr{dirLoop}
    Y = load_tiffstack([dirrr{dirLoop} 'msCam_MC_cawaves.tiff']);
    data_name = [dirrr{dirLoop} 'ca_waves.mat'];
    if videoPlotting == true
        outname = [dirrr{dirLoop} 'ca_processing.tiff'];
        Yraw = load_tiffstack([dirrr{dirLoop} 'msCam_MC.tiff']);
        minbg = min(Yraw,[],3);
    end
    ys = Y(1:2:end,1:2:end,:);
    [h, w, nf] = size(ys);
    bg = mean(ys,3);
    bgs = std(single(ys), [], 3);
    mask = bgs<1 | bg<1;
    bgs(mask) = Inf;
    bgtime = reshape(bg, [h*w, 1])*ones(1, nf);
    bgstime = reshape(bgs, [h*w, 1])*ones(1, nf);
    td = 30*5; % smoothing in time
    yss = reshape(ys, [h*w, nf]);
    yss = conv2(1, ones(td,1)./td, yss, 'same');
    yss = (yss - bgtime )./bgstime;
    nf_ds = size(yss,2);
    
    yim = reshape(yss, [h, w, nf_ds]);
    %%
    z_score_thresh = 2;
    minarea = 10;
    maxarea = ceil(h*w/4);
    diff_thresh = 10;
    figure(2); clf;
    set(gcf, 'Position', [180   733   719   221], 'Color', [.8 .8 .8])
    colormap viridis
    
    % fs = 3000:2:(3000+(10*700));%nf;%30000;%850:4:2200;
    fs = 1:nf;%nf;%30000;%850:4:2200;
    % fs = 7400:8800;
    
    spd = single(NaN(length(fs), 10));
    cx = single(NaN(length(fs), 10));
    cy = single(NaN(length(fs), 10));
    area = single(NaN(length(fs), 10));
    pm = single(NaN(length(fs), 10));
    drawinds = -1; % fs(30:30:end);%1:30:nf;
    %
    area_clrs = light_colormap(jet(16), 3);
    for ind = 1:length(fs) % 1000:2000%nf_ds
        %%
        i = fs(ind);
        a = squeeze(yim(:,:,i)) >= z_score_thresh;
        if ismember(i, drawinds)
            %%
            clf
            im1 = squeeze(Yraw(:,:,i)-minbg);
            %         im1 = imresize(im1, [h, w], 'bilinear');
            subplot_tight(1,3,1);
            imagesc(im1, [0 40]);%, [0 1]);
            title(sprintf('DF/F, frame %6.0f', i))
            colorbar
            axis image
            im2 = squeeze(yim(:,:,i));
            
            subplot_tight(1,3,2);
            imagesc(im2, [-2 8]);%, [0 1]);
            hold on
            title(sprintf('Morph. filtered,\n z-score'))
            colorbar
            axis image
            
            subplot_tight(1,3,3);
            imagesc(a, [0 1]);%, [0 1]);
            title('Ca ROIs ')
            colorbar
            axis image
        end
        temp = regionprops(a, 'Centroid', 'ConvexArea', 'Perimeter', 'ConvexHull');
        num_regions = 0;
        clearvars valid_region
        for tt = 1:length(temp)
            if temp(tt).ConvexArea >= minarea && temp(tt).ConvexArea <= maxarea
                num_regions  = num_regions +1;
                valid_region(num_regions) = temp(tt);
            end
        end
        if num_regions > 0
            if num_regions>1
                bestmatch_idx = NaN(num_regions ,1);
                dx = []; dy = []; da = []; dp = [];
                try
                    prev_regions = sum(~isnan(cx(ind-1, :)));
                catch
                    prev_regions = 0;
                end
                for ttt = 1:num_regions
                    for rrr = 1:prev_regions
                        dx(ttt, rrr) = valid_region(ttt).Centroid(1) - cx(ind-1, rrr);
                        dy(ttt, rrr) = valid_region(ttt).Centroid(2) - cy(ind-1, rrr);
                        da(ttt, rrr) = sqrt(abs(valid_region(ttt).ConvexArea - area(ind-1, rrr)));
                        dp(ttt, rrr) = valid_region(ttt).Perimeter - pm(ind-1, rrr);
                    end
                end
                dd = sqrt(dx.^2 + dy.^2 + da.^2 + dp.^2);
                labels = 1:num_regions;
                if prev_regions >= num_regions
                    label_loop = num_regions;
                else
                    label_loop = prev_regions;
                end
                for rrr = 1:label_loop
                    if nanmin(dd(:,rrr)) < diff_thresh
                        best = find(dd(:,rrr)==nanmin(dd(:,rrr)));
                        bestmatch_idx(best) = rrr;
                    end
                end
                bestmatch_idx(isnan(bestmatch_idx))  = setdiff(labels, bestmatch_idx);
            else
                bestmatch_idx = 1;
            end
            for tt = 1:num_regions
                this_ind = bestmatch_idx(tt);
                if ind>1 && ~isnan(cx(ind-1))
                    dx = valid_region(tt).Centroid(1) - cx(ind-1, this_ind);
                    dy = valid_region(tt).Centroid(2) - cy(ind-1, this_ind);
                    dd = sqrt(dx.^2 + dy.^2);
                    
                    if dd<diff_thresh || isnan(dd)
                        spd(ind, this_ind) = dd;
                        cx(ind, this_ind) = valid_region(tt).Centroid(1);
                        cy(ind, this_ind) = valid_region(tt).Centroid(2);
                        area(ind, this_ind) = valid_region(tt).ConvexArea;
                        pm(ind, this_ind) = valid_region(tt).Perimeter;
                    end
                else
                    %                 idx = idx+1;
                    spd(ind, this_ind) = 0;
                    cx(ind, this_ind) = valid_region(tt).Centroid(1);
                    cy(ind, this_ind) = valid_region(tt).Centroid(2);
                    area(ind, this_ind) = valid_region(tt).ConvexArea;
                    pm(ind, this_ind) = valid_region(tt).Perimeter;
                end
                if ismember(i, drawinds)
                    hold on
                    scatter(valid_region(tt).Centroid(1), valid_region(tt).Centroid(2), 'MarkerFaceColor', area_clrs(this_ind,:))
                    plot(valid_region(tt).ConvexHull(:,1), valid_region(tt).ConvexHull(:,2), '-', 'Color', area_clrs(this_ind,:))
                    
                    a = find(isnan(cx(1:ind, this_ind)), 1, 'last');
                    if ind>a
                        plot(cx(a:ind, this_ind), cy(a:ind, this_ind), '-', 'Color', area_clrs(this_ind,:))
                    end
                end
            end
            last_region = valid_region;
        end
        drawnow;
        if ismember(i, drawinds) && videoPlotting
            temp = getframe(gcf);
            imwrite(temp.cdata, outname,'WriteMode','append')
        end
        %     pause(.01)
    end
    active_roi = nanmax(area,[],2)>0;
    roi_perc(dirLoop) = nanmean(active_roi);
    figure; plot(fs, area); xlim([1 nf]); title(sprintf('%% ROI = %3.3f',100*nanmean(nanmax(area,[],2)>0))) 
    drawnow
    save(data_name, 'cx', 'cy', 'spd', 'area', 'pm', 'fs', 'dirrr')
    
end %%%%%%%%%%%%%%%%%%%%%%%
%%
% temp = regionprops3(yim, 'Image', 'Centroid')
names = {'RET' 'HC' 'RET' 'CON' 'HC' 'CON' 'HC' 'CON'};
pos = [1:8 1:8];
figure; clf; hold on
plot(2:4, roi_perc(10:12), '-k', 'LineWidth', 2)
plot(5:7, roi_perc(13:15), '-k', 'LineWidth', 2)
plot(1:8, roi_perc(9:16), 'o-k')
plot(2:4, roi_perc(2:4), '-b', 'LineWidth', 2)
plot(5:7, roi_perc(5:7), '-b', 'LineWidth', 2)
plot(1:8, roi_perc(1:8), 'o-b')
set(gca, 'XTick', 1:8, 'XTickLabels', names)
%%

[nt, nd] = size(cx);
reach = 2;

for d = 1:nd
    cxdiff = abs(diff(cx(:,d)));
    cydiff = abs(diff(cy(:,d)));
    adiff  = abs(diff(area(:,d)));
    pdiff  = abs(diff(pm(:,d)));
    
    
end

for ind = 2:nt
    num_regions = sum(~isnan(cx(ind+1, :)));
    prev_regions = sum(~isnan(cx(ind-reach, :)));
    if num_regions < prev_regions && (num_regions>1 || prev_regions>1) % sum(  any(~isnan(cx([ind-1:ind],:)), 2) ) ==2
    dx = []; dy = []; da = []; dp = []; f = [];
    for ttt = 1:prev_regions
        for rrr = 1:prev_regions
%             f(ttt, rrr) = area(ttt,rrr);
            dx(ttt, rrr) = cx(ind-reach, ttt)   - cx(ind+1, rrr);
            dy(ttt, rrr) = cy(ind-reach, ttt)   - cy(ind+1, rrr);
            da(ttt, rrr) = area(ind-reach, ttt) - area(ind+1, rrr);
            dp(ttt, rrr) = pm(ind-reach, ttt)   - pm(ind+1, rrr);
        end
    end
    dd = sqrt(dx.^2 + dy.^2 + da.^2 + dp.^2);
    labels = 1:prev_regions;
    for rrr = 1:num_regions
            best = find(dd(:,rrr)==nanmin(dd(:,rrr)));
            if best~=rrr
                cx(
                figure;
                imagesc(area(ind-10:ind+10,:))
            end
%             bestmatch_idx(best) = rrr;
    end
    end
end

%%
pqwerty
nc = 10;
[p.coeff, p.score, p.latent, p.tsquared, p.explained, p.mu] = pca(single(yss)', ...
    'Algorithm', 'als', 'NumComponents', nc, 'Centered', 'off');

s = p.score';
fp   = zeros(h, w, nc);
% lat  = reshape(p.latent, [h w]);
% exp  = reshape(p.explained, [h w]);
mu   = reshape(p.mu, [h w]);

for i = 1:nc
    fp(:,:,i)  = reshape(p.coeff(:,i), [h w]);
end

figure(nc); clf
for i = 1:nc
    subplot_tight(ceil(sqrt(nc)),ceil(sqrt(nc)), i)
    imagesc(squeeze(fp(:,:,i))); 
    title(i)
    axis image off
    drawnow; 
end

figure; 
stacked_traces(normalize_rows(s))
%%
cmap = jet(nc);
cmap = cmap(randperm(nc),:);
nf2 = size(s,2);
y2 = p.coeff*p.score';
aa = min(min(min(y2)));
bb = max(max(max(y2)));


yr = p.coeff*( p.score.*( ones(nf2 ,1)*cmap(:,1)' ) )';
yg = p.coeff*( p.score.*( ones(nf2 ,1)*cmap(:,2)' ) )';
yb = p.coeff*( p.score.*( ones(nf2 ,1)*cmap(:,3)' ) )';

yimr = reshape(yr, [h, w, size(yr,2)]);
yimg = reshape(yg, [h, w, size(yr,2)]);
yimb = reshape(yg, [h, w, size(yr,2)]);

figure(2); clf; 
for i = 1:4:nf2
    subplot(1,2,1)
    im = squeeze(yim(:,:,i));
    imagesc(im, [20 50]); 
    subplot(1,2,2)
    im = cat(3, yimr(:,:,i), yimg(:,:,i), yimb(:,:,i));
    im = im - aa / (bb-aa);
    image(im); 
    title(i)
    drawnow; 
end